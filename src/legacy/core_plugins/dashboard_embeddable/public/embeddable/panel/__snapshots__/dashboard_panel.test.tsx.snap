// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DashboardPanel renders an embeddable when it is done loading 1`] = `
<DashboardPanelUi
  container={
    DashboardContainer {
      "anyChangeListeners": Array [],
      "container": undefined,
      "embeddableFactories": EmbeddableFactoryRegistry {
        "factories": Object {
          "dashboard": DashboardContainerFactory {
            "name": "dashboard",
            "savedObjectMetaData": undefined,
          },
          "hello_world": HelloWorldEmbeddableFactory {
            "name": "hello_world",
            "savedObjectMetaData": undefined,
          },
        },
      },
      "embeddableUnsubscribes": Object {
        "739ca72c-f593-4d87-8a06-1daa12620bf9": [Function],
      },
      "embeddables": Object {
        "739ca72c-f593-4d87-8a06-1daa12620bf9": HelloWorldEmbeddable {
          "anyChangeListeners": Array [],
          "container": [Circular],
          "id": "739ca72c-f593-4d87-8a06-1daa12620bf9",
          "input": Object {},
          "inputChangeListeners": Array [],
          "isContainer": false,
          "output": Object {
            "title": "Hello World!",
          },
          "outputChangeListeners": Array [
            [Function],
          ],
          "panelContainer": <div
            class="embPanel panel-content"
            id="embeddedPanel"
          >
            <div
              class="euiPanel embPanel embPanel--editing"
              data-test-subj="embeddablePanel"
            >
              <div
                class="embPanel__header"
                data-test-subj="dashboardPanelHeading-HelloWorld!"
              >
                <div
                  aria-label="Dashboard panel: Hello World!"
                  class="embPanel__title embPanel__dragger"
                  data-test-subj="dashboardPanelTitle"
                  title="Hello World!"
                >
                  Hello World!
                </div>
                <div
                  class="euiPopover euiPopover--anchorDownRight euiPopover--withTitle embPanel_optionsMenuPopover"
                  data-test-subj="dashboardPanelContextMenuClosed"
                  id="dashboardPanelContextMenu"
                >
                  <div
                    class="euiPopover__anchor"
                  >
                    <button
                      aria-label="Panel options"
                      class="euiButtonIcon euiButtonIcon--text embPanel_optionsMenuButton"
                      data-test-subj="dashboardPanelToggleMenuIcon"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        class="euiIcon euiIcon--medium euiButtonIcon__icon"
                        focusable="false"
                        height="16"
                        viewBox="0 0 16 16"
                        width="16"
                        xmlns="http://www.w3.org/2000/svg"
                        xmlns:xlink="http://www.w3.org/1999/xlink"
                      >
                        <defs>
                          <path
                            d="M.164 10.329L1.87 8 .163 5.67c.18-.601.43-1.19.758-1.757a8.197 8.197 0 0 1 1.142-1.535l2.872.313L6.099.05a8.166 8.166 0 0 1 3.8-.003l1.166 2.644 2.872-.313a8.166 8.166 0 0 1 1.899 3.293L14.13 8l1.706 2.33c-.18.601-.43 1.19-.758 1.757a8.197 8.197 0 0 1-1.142 1.535l-2.872-.313-1.164 2.641a8.166 8.166 0 0 1-3.8.003l-1.166-2.644-2.872.313a8.166 8.166 0 0 1-1.899-3.293zm4.663 1.986a1 1 0 0 1 1.023.591l.957 2.17c.79.134 1.597.132 2.387-.001l.956-2.169a1 1 0 0 1 1.023-.59l2.358.256a7.23 7.23 0 0 0 1.194-2.068l-1.401-1.913a1 1 0 0 1 0-1.182l1.4-1.912a7.165 7.165 0 0 0-1.192-2.069l-2.359.257a1 1 0 0 1-1.023-.591L9.193.924a7.165 7.165 0 0 0-2.387.001L5.85 3.094a1 1 0 0 1-1.023.59l-2.358-.256a7.23 7.23 0 0 0-1.194 2.068l1.401 1.913a1 1 0 0 1 0 1.182l-1.4 1.912c.28.751.681 1.45 1.192 2.069l2.359-.257zM8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0-1a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                            id="gear-a"
                          />
                        </defs>
                        <use
                          xlink:href="#gear-a"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
              <div
                class="embeddable-root panel-content"
              >
                <div>
                  Hello World!
                </div>
              </div>
            </div>
          </div>,
          "type": "hello_world",
        },
      },
      "id": "f38730d4-e122-4544-b68b-9d8cf6316dd5",
      "input": Object {
        "filters": Array [],
        "isFullScreenMode": false,
        "panels": Object {
          "739ca72c-f593-4d87-8a06-1daa12620bf9": Object {
            "embeddableId": "739ca72c-f593-4d87-8a06-1daa12620bf9",
            "gridData": Object {
              "h": 15,
              "i": "739ca72c-f593-4d87-8a06-1daa12620bf9",
              "w": 24,
              "x": 0,
              "y": 0,
            },
            "initialInput": Object {},
            "type": "hello_world",
          },
        },
        "query": Object {
          "language": "kuery",
          "query": "",
        },
        "timeRange": Object {
          "from": "now-15m",
          "to": "now",
        },
        "title": "My Test Dashboard",
        "useMargins": false,
        "viewMode": "edit",
      },
      "inputChangeListeners": Array [],
      "isContainer": true,
      "onExitFullScreenMode": [Function],
      "onPanelsUpdated": [Function],
      "output": Object {
        "embeddableLoaded": Object {
          "739ca72c-f593-4d87-8a06-1daa12620bf9": true,
        },
        "filters": Array [],
        "isFullScreenMode": false,
        "panels": Object {},
        "query": Object {
          "language": "kuery",
          "query": "",
        },
        "timeRange": Object {
          "from": "now-15m",
          "to": "now",
        },
        "title": "My Test Dashboard",
        "useMargins": false,
        "viewMode": "edit",
      },
      "outputChangeListeners": Array [
        [Function],
        [Function],
      ],
      "panelContainer": undefined,
      "type": "dashboard",
    }
  }
  embeddableId="739ca72c-f593-4d87-8a06-1daa12620bf9"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
>
  <div
    className="embPanel panel-content"
    id="embeddedPanel"
  />
</DashboardPanelUi>
`;
