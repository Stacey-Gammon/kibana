{
  "id": "presentationUtil",
  "client": {
    "classes": [],
    "functions": [
      {
        "tags": [],
        "id": "def-public.LazyDashboardPicker",
        "type": "Function",
        "label": "LazyDashboardPicker",
        "description": [],
        "source": {
          "path": "src/plugins/presentation_util/public/components/index.tsx",
          "lineNumber": 28
        },
        "signature": [
          "React.LazyExoticComponent<typeof ",
          "DashboardPicker",
          ">"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-public.LazySavedObjectSaveModalDashboard",
        "type": "Function",
        "label": "LazySavedObjectSaveModalDashboard",
        "description": [],
        "source": {
          "path": "src/plugins/presentation_util/public/components/index.tsx",
          "lineNumber": 30
        },
        "signature": [
          "React.LazyExoticComponent<typeof ",
          "default",
          ">"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.withSuspense",
        "type": "Function",
        "children": [
          {
            "id": "def-public.withSuspense.Component",
            "type": "CompoundType",
            "label": "Component",
            "isRequired": true,
            "signature": [
              "React.ComponentType<P>"
            ],
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/index.tsx",
              "lineNumber": 18
            }
          },
          {
            "id": "def-public.withSuspense.fallback",
            "type": "CompoundType",
            "label": "fallback",
            "isRequired": false,
            "signature": [
              "React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | null"
            ],
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/index.tsx",
              "lineNumber": 19
            }
          }
        ],
        "signature": [
          "<P extends {}>(Component: React.ComponentType<P>, fallback?: React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | null) => (props: P) => JSX.Element"
        ],
        "description": [
          "\nA HOC which supplies React.Suspense with a fallback component, and a `EuiErrorBoundary` to contain errors."
        ],
        "label": "withSuspense",
        "source": {
          "path": "src/plugins/presentation_util/public/components/index.tsx",
          "lineNumber": 17
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-public.SaveModalDashboardProps",
        "type": "Interface",
        "label": "SaveModalDashboardProps",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.documentInfo",
            "type": "Object",
            "label": "documentInfo",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 18
            },
            "signature": [
              "SaveModalDocumentInfo"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.canSaveByReference",
            "type": "boolean",
            "label": "canSaveByReference",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.objectType",
            "type": "string",
            "label": "objectType",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 20
            }
          },
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.onClose",
            "type": "Function",
            "label": "onClose",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 21
            },
            "signature": [
              "() => void"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.onSave",
            "type": "Function",
            "label": "onSave",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 22
            },
            "signature": [
              "(props: ",
              {
                "pluginId": "savedObjects",
                "scope": "public",
                "docId": "kibSavedObjectsPluginApi",
                "section": "def-public.OnSaveProps",
                "text": "OnSaveProps"
              },
              " & { dashboardId: string | null; addToLibrary: boolean; }) => void"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SaveModalDashboardProps.tagOptions",
            "type": "CompoundType",
            "label": "tagOptions",
            "description": [],
            "source": {
              "path": "src/plugins/presentation_util/public/components/types.ts",
              "lineNumber": 23
            },
            "signature": [
              "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | ((state: ",
              {
                "pluginId": "savedObjects",
                "scope": "public",
                "docId": "kibSavedObjectsPluginApi",
                "section": "def-public.SaveModalState",
                "text": "SaveModalState"
              },
              ") => React.ReactNode) | null | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/presentation_util/public/components/types.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "id": "def-public.PresentationUtilPluginSetup",
      "type": "Interface",
      "label": "PresentationUtilPluginSetup",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "src/plugins/presentation_util/public/types.ts",
        "lineNumber": 10
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.PresentationUtilPluginStart",
      "type": "Interface",
      "label": "PresentationUtilPluginStart",
      "description": [],
      "tags": [],
      "children": [
        {
          "tags": [],
          "id": "def-public.PresentationUtilPluginStart.ContextProvider",
          "type": "Function",
          "label": "ContextProvider",
          "description": [],
          "source": {
            "path": "src/plugins/presentation_util/public/types.ts",
            "lineNumber": 13
          },
          "signature": [
            "React.FC<{}>"
          ]
        }
      ],
      "source": {
        "path": "src/plugins/presentation_util/public/types.ts",
        "lineNumber": 12
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}